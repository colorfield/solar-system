package org.sse.ui.container{		import org.sse.constant.PrivateParams;		import com.warmforestflash.ui.ScrollBar;	import org.libspark.ui.SWFWheel;		import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.geom.ColorTransform;	import flash.geom.Transform;		/**	 * Panneau à onglets (rôle similaire à un Tabbed Pane Java Swing)	 */	public class TabbedPanel extends MovieClip	{				private static const CURRENT_COL:int = 0x000000;		public static const PANEL_WIDTH:int = 600 - 20; // moins la scrollBar		public static const PANEL_HEIGHT:int = 375;						private var contents:Array;		private var activeColor:int;		private var nbrPanels:int = 4; // TODO : à passer en paramètre				public function TabbedPanel()		{					}				internal function displayContent(e:MouseEvent):void		{			var curTab:String = e.target.name;			// id du contenu en fonction de l'id du tab			var contentId:int = Number(curTab.substr(3,1));						trace("CONTENT ID = " + contentId + " ("+e.target.name+")");			setContent(contentId);			}				// ------------				/**		 * Définition d'une couleur pour permettre d'identifier l'onglet courant		 */		private function setTabColor(col:int, tab:MovieClip)		{			var ct:ColorTransform = new ColorTransform();			ct.color = col;			var transformation:Transform = new Transform(tab.bg_mc);			transformation.colorTransform = ct;						if(col == CURRENT_COL){				tab.bg_mc.alpha = 0.5;			}else{				tab.bg_mc.alpha = 1;			}					}				/**		 * Assignation du contenu		 */		public function setContent(contentId:int){						//--- initialise la couleur des onglets			// TODO : prendre le nombre d'onglets en paramètre			setTabColor(activeColor,tab0_mc);			setTabColor(activeColor,tab1_mc);			setTabColor(activeColor,tab2_mc);			setTabColor(activeColor,tab3_mc);						// le courant est en noir et en alpha 80%			setTabColor(CURRENT_COL,this["tab"+contentId+"_mc"]);						//--- gestion du contenu			// supprimer tous les enfants d'abord			var i:int = container_mc.numChildren;			while( i -- )			{				container_mc.removeChildAt( i );			}						// puis on place le contenu			this.container_mc.addChild(contents[contentId]);						// roulette de la souris			// SWFWheel.initialize(contents[contentId]);						// scrollbar			var scrollBar:ScrollBar = new ScrollBar(contents[contentId], 				PrivateParams.COLOR_DARK_BLUE, 				PrivateParams.COLOR_MEDIUM_BLUE,				PrivateParams.COLOR_TITLE, 				0xffffff, 15, 15, 4, true,				PANEL_WIDTH,				PANEL_HEIGHT);						this.container_mc.addChild(scrollBar);						scrollBar.x += 20;					}				//--------------------------------------------------------------------				public final function init():void		{			// TODO : quand souhaite rendre le nombre d'onglets dynamiques			// le faire ici, en fonction du tableau de clips passés, ...						for(var i=0; i<nbrPanels; i++){				this["tab"+i+"_mc"].addEventListener(MouseEvent.CLICK,displayContent);				this["tab"+i+"_mc"].mouseChildren = false;				this["tab"+i+"_mc"].buttonMode = true;				this["tab"+i+"_mc"].useHandCursor = true;			}						// affiche le premier contenu			setContent(0);					}						public function setTitles(titles:Array):void		{			tab0_mc.title_txt.text = titles[0];			tab1_mc.title_txt.text = titles[1];			tab2_mc.title_txt.text = titles[2];			tab3_mc.title_txt.text = titles[3];		}				public function setActiveColor(col:int):void		{			activeColor = col;		}				public function setClips(contents:Array):void		{			this.contents = contents;		}							}}